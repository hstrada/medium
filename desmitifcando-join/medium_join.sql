-- DROP DATABASE MEDIUM_EVENTOS;

-- CRIANDO UM BANCO DE DADOS CHAMADO MEDIUM_EVENTOS
CREATE DATABASE MEDIUM_EVENTOS;

-- COLOCANDO O BANCO DE DADOS EM USO
USE MEDIUM_EVENTOS;

-- CRIANDO A TABELA DE TIPOS DE EVENTOS COM UM ID E UM NOME
CREATE TABLE TIPOSEVENTOS
(
	TIPOEVENTOID	INT IDENTITY PRIMARY KEY
	,NOME			VARCHAR(200) NOT NULL UNIQUE
);

-- CRIANDO UMA TABELA DE EVENTOS QUE CONTÉM O TÍTULO, A DESCRICAO, A DATA E A CATEGORIA
CREATE TABLE EVENTOS 
(
	EVENTOID			INT IDENTITY PRIMARY KEY
	,TITULO				VARCHAR(250) NOT NULL
	,DESCRICAO			TEXT
	,DATAEVENTO			DATETIME NOT NULL
	,TIPOEVENTOID		INT FOREIGN KEY REFERENCES TIPOSEVENTOS (TIPOEVENTOID)
);

-- INSERINDO DOIS TIPOS DE EVENTOS E DOIS EVENTOS NAS TABELAS CORRESPONDENTES
INSERT INTO TIPOSEVENTOS VALUES ('TECNOLOGIA'), ('DESIGN');
INSERT INTO EVENTOS VALUES ('TITULO EVENTO A', 'DESCRICAO EVENTO A', GETDATE(), 1), ('TITULO EVENTO B', 'DESCRICAO EVENTO B', GETDATE(), 2);

-- SELECIONANDO OS REGISTROS DAS DUAS TABELAS PARA VERIFICAR SE OS REGISTROS FORAM INSERIDOS COM SUCESSO
SELECT TIPOEVENTOID, NOME FROM TIPOSEVENTOS ORDER BY TIPOEVENTOID;
SELECT EVENTOID, TITULO, DATAEVENTO, TIPOEVENTOID FROM EVENTOS ORDER BY EVENTOID;

SELECT TE.TIPOEVENTOID, TE.NOME, E.EVENTOID, E.TITULO, E.DATAEVENTO, E.TIPOEVENTOID
	FROM TIPOSEVENTOS TE
	INNER JOIN EVENTOS E
	ON TE.TIPOEVENTOID = E.TIPOEVENTOID;


		SELECT EVENTOS.TITULO, TIPOSEVENTOS.NOME
			FROM EVENTOS
			JOIN TIPOSEVENTOS
				ON EVENTOS.TIPOEVENTOID = TIPOSEVENTOS.TIPOEVENTOID

		SELECT E.TITULO, TE.NOME
			FROM EVENTOS AS E
			JOIN TIPOSEVENTOS AS TE
				ON E.TIPOEVENTOID = TE.TIPOEVENTOID